/**
 * generated by Xtext
 */
package gov.nasa.ensemble.dictionary.xtext.generator;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Collections;
import java.util.Map;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.Resource.Factory.Registry;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.Exceptions;

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
@SuppressWarnings("all")
public class XDictionaryGenerator implements IGenerator {
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    Registry reg = Registry.INSTANCE;
    Map<String,Object> map = reg.getExtensionToFactoryMap();
    XMIResourceFactoryImpl _xMIResourceFactoryImpl = new XMIResourceFactoryImpl();
    map.put("ad", _xMIResourceFactoryImpl);
    final URI uri = resource.getURI();
    String _lastSegment = uri.lastSegment();
    final String filename = _lastSegment.replace(".xad", ".ad");
    ResourceSetImpl _resourceSetImpl = new ResourceSetImpl();
    ResourceSetImpl rs = _resourceSetImpl;
    URI _createURI = URI.createURI(filename);
    Resource xmiResource = rs.createResource(_createURI);
    EList<EObject> _contents = resource.getContents();
    EObject dictionary = _contents.get(0);
    EList<EObject> _contents_1 = xmiResource.getContents();
    _contents_1.add(dictionary);
    ByteArrayOutputStream _byteArrayOutputStream = new ByteArrayOutputStream();
    ByteArrayOutputStream out = _byteArrayOutputStream;
    try {
      xmiResource.save(out, Collections.EMPTY_MAP);
    } catch (final Throwable _t) {
      if (_t instanceof IOException) {
        final IOException e = (IOException)_t;
        e.printStackTrace();
      } else {
        throw Exceptions.sneakyThrow(_t);
      }
    }
    String _string = out.toString();
    fsa.generateFile(filename, _string);
  }
}
