/*
* generated by Xtext
*/
package gov.nasa.ensemble.dictionary.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class XDictionaryGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DictionaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dictionary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cNameKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_0_1 = (Keyword)cGroup_0_0.eContents().get(1);
		private final Assignment cNameAssignment_0_0_2 = (Assignment)cGroup_0_0.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_0_0_2_0 = (RuleCall)cNameAssignment_0_0_2.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cUnorderedGroup_0.eContents().get(1);
		private final Keyword cAuthorKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Assignment cAuthorAssignment_0_1_2 = (Assignment)cGroup_0_1.eContents().get(2);
		private final RuleCall cAuthorSTRINGTerminalRuleCall_0_1_2_0 = (RuleCall)cAuthorAssignment_0_1_2.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cUnorderedGroup_0.eContents().get(2);
		private final Keyword cDateKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2_1 = (Keyword)cGroup_0_2.eContents().get(1);
		private final Assignment cDateAssignment_0_2_2 = (Assignment)cGroup_0_2.eContents().get(2);
		private final RuleCall cDateSTRINGTerminalRuleCall_0_2_2_0 = (RuleCall)cDateAssignment_0_2_2.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cUnorderedGroup_0.eContents().get(3);
		private final Keyword cDescriptionKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_3_1 = (Keyword)cGroup_0_3.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_3_2 = (Assignment)cGroup_0_3.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_3_2_0 = (RuleCall)cDescriptionAssignment_0_3_2.eContents().get(0);
		private final Group cGroup_0_4 = (Group)cUnorderedGroup_0.eContents().get(4);
		private final Keyword cVersionKeyword_0_4_0 = (Keyword)cGroup_0_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_4_1 = (Keyword)cGroup_0_4.eContents().get(1);
		private final Assignment cVersionAssignment_0_4_2 = (Assignment)cGroup_0_4.eContents().get(2);
		private final RuleCall cVersionSTRINGTerminalRuleCall_0_4_2_0 = (RuleCall)cVersionAssignment_0_4_2.eContents().get(0);
		private final Group cGroup_0_5 = (Group)cUnorderedGroup_0.eContents().get(5);
		private final Keyword cDomainKeyword_0_5_0 = (Keyword)cGroup_0_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_5_1 = (Keyword)cGroup_0_5.eContents().get(1);
		private final Assignment cDomainAssignment_0_5_2 = (Assignment)cGroup_0_5.eContents().get(2);
		private final RuleCall cDomainSTRINGTerminalRuleCall_0_5_2_0 = (RuleCall)cDomainAssignment_0_5_2.eContents().get(0);
		private final Assignment cDefinitionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDefinitionsDefinitionParserRuleCall_1_0 = (RuleCall)cDefinitionsAssignment_1.eContents().get(0);
		
		//Dictionary:
		//	("name" "=" name=ID & ("author" "=" author=STRING)? & ("date" "=" date=STRING)? & ("description" "="
		//	description=STRING)? & ("version" "=" version=STRING)? & "domain" "=" domain=STRING) definitions+=Definition*;
		@Override
		public ParserRule getRule() { return rule; }

		//("name" "=" name=ID & ("author" "=" author=STRING)? & ("date" "=" date=STRING)? & ("description" "="
		//description=STRING)? & ("version" "=" version=STRING)? & "domain" "=" domain=STRING) definitions+=Definition*
		public Group getGroup() { return cGroup; }

		//"name" "=" name=ID & ("author" "=" author=STRING)? & ("date" "=" date=STRING)? & ("description" "=" description=STRING)?
		//& ("version" "=" version=STRING)? & "domain" "=" domain=STRING
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }

		//"name" "=" name=ID
		public Group getGroup_0_0() { return cGroup_0_0; }

		//"name"
		public Keyword getNameKeyword_0_0_0() { return cNameKeyword_0_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_0_1() { return cEqualsSignKeyword_0_0_1; }

		//name=ID
		public Assignment getNameAssignment_0_0_2() { return cNameAssignment_0_0_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_2_0() { return cNameIDTerminalRuleCall_0_0_2_0; }

		//("author" "=" author=STRING)?
		public Group getGroup_0_1() { return cGroup_0_1; }

		//"author"
		public Keyword getAuthorKeyword_0_1_0() { return cAuthorKeyword_0_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_1_1() { return cEqualsSignKeyword_0_1_1; }

		//author=STRING
		public Assignment getAuthorAssignment_0_1_2() { return cAuthorAssignment_0_1_2; }

		//STRING
		public RuleCall getAuthorSTRINGTerminalRuleCall_0_1_2_0() { return cAuthorSTRINGTerminalRuleCall_0_1_2_0; }

		//("date" "=" date=STRING)?
		public Group getGroup_0_2() { return cGroup_0_2; }

		//"date"
		public Keyword getDateKeyword_0_2_0() { return cDateKeyword_0_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2_1() { return cEqualsSignKeyword_0_2_1; }

		//date=STRING
		public Assignment getDateAssignment_0_2_2() { return cDateAssignment_0_2_2; }

		//STRING
		public RuleCall getDateSTRINGTerminalRuleCall_0_2_2_0() { return cDateSTRINGTerminalRuleCall_0_2_2_0; }

		//("description" "=" description=STRING)?
		public Group getGroup_0_3() { return cGroup_0_3; }

		//"description"
		public Keyword getDescriptionKeyword_0_3_0() { return cDescriptionKeyword_0_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_3_1() { return cEqualsSignKeyword_0_3_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_0_3_2() { return cDescriptionAssignment_0_3_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_3_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_3_2_0; }

		//("version" "=" version=STRING)?
		public Group getGroup_0_4() { return cGroup_0_4; }

		//"version"
		public Keyword getVersionKeyword_0_4_0() { return cVersionKeyword_0_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_4_1() { return cEqualsSignKeyword_0_4_1; }

		//version=STRING
		public Assignment getVersionAssignment_0_4_2() { return cVersionAssignment_0_4_2; }

		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_0_4_2_0() { return cVersionSTRINGTerminalRuleCall_0_4_2_0; }

		//"domain" "=" domain=STRING
		public Group getGroup_0_5() { return cGroup_0_5; }

		//"domain"
		public Keyword getDomainKeyword_0_5_0() { return cDomainKeyword_0_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_5_1() { return cEqualsSignKeyword_0_5_1; }

		//domain=STRING
		public Assignment getDomainAssignment_0_5_2() { return cDomainAssignment_0_5_2; }

		//STRING
		public RuleCall getDomainSTRINGTerminalRuleCall_0_5_2_0() { return cDomainSTRINGTerminalRuleCall_0_5_2_0; }

		//definitions+=Definition*
		public Assignment getDefinitionsAssignment_1() { return cDefinitionsAssignment_1; }

		//Definition
		public RuleCall getDefinitionsDefinitionParserRuleCall_1_0() { return cDefinitionsDefinitionParserRuleCall_1_0; }
	}

	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Definition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEnumDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cParameterDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cActivityDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cActivityGroupDefParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectDefParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cResourceDefParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Definition:
		//	EnumDef //	 | Datatype 
		//	| ParameterDef | ActivityDef | ActivityGroupDef | ObjectDef | ResourceDef;
		@Override
		public ParserRule getRule() { return rule; }

		//EnumDef //	 | Datatype 
		//| ParameterDef | ActivityDef | ActivityGroupDef | ObjectDef | ResourceDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//EnumDef
		public RuleCall getEnumDefParserRuleCall_0() { return cEnumDefParserRuleCall_0; }

		//ParameterDef
		public RuleCall getParameterDefParserRuleCall_1() { return cParameterDefParserRuleCall_1; }

		//ActivityDef
		public RuleCall getActivityDefParserRuleCall_2() { return cActivityDefParserRuleCall_2; }

		//ActivityGroupDef
		public RuleCall getActivityGroupDefParserRuleCall_3() { return cActivityGroupDefParserRuleCall_3; }

		//ObjectDef
		public RuleCall getObjectDefParserRuleCall_4() { return cObjectDefParserRuleCall_4; }

		//ResourceDef
		public RuleCall getResourceDefParserRuleCall_5() { return cResourceDefParserRuleCall_5; }
	}

	public class EnumDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesEnumValueParserRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//EnumDef:
		//	"Enum" name=ID "{" values+=EnumValue* "}";
		@Override
		public ParserRule getRule() { return rule; }

		//"Enum" name=ID "{" values+=EnumValue* "}"
		public Group getGroup() { return cGroup; }

		//"Enum"
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//values+=EnumValue*
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }

		//EnumValue
		public RuleCall getValuesEnumValueParserRuleCall_3_0() { return cValuesEnumValueParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EnumValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLiteralKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cNameAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0_2_0 = (RuleCall)cNameAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cColorKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cColorAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cColorSTRINGTerminalRuleCall_1_1_2_0 = (RuleCall)cColorAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cLiteralKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cLiteralAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cLiteralSTRINGTerminalRuleCall_1_2_2_0 = (RuleCall)cLiteralAssignment_1_2_2.eContents().get(0);
		
		//EnumValue:
		//	"Literal" ("name" "=" name=STRING & ("color" "=" color=STRING)? & ("literal" "=" literal=STRING)?);
		@Override
		public ParserRule getRule() { return rule; }

		//"Literal" ("name" "=" name=STRING & ("color" "=" color=STRING)? & ("literal" "=" literal=STRING)?)
		public Group getGroup() { return cGroup; }

		//"Literal"
		public Keyword getLiteralKeyword_0() { return cLiteralKeyword_0; }

		//"name" "=" name=STRING & ("color" "=" color=STRING)? & ("literal" "=" literal=STRING)?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//"name" "=" name=STRING
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"name"
		public Keyword getNameKeyword_1_0_0() { return cNameKeyword_1_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1_0_1() { return cEqualsSignKeyword_1_0_1; }

		//name=STRING
		public Assignment getNameAssignment_1_0_2() { return cNameAssignment_1_0_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0_2_0() { return cNameSTRINGTerminalRuleCall_1_0_2_0; }

		//("color" "=" color=STRING)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"color"
		public Keyword getColorKeyword_1_1_0() { return cColorKeyword_1_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_1_1_1() { return cEqualsSignKeyword_1_1_1; }

		//color=STRING
		public Assignment getColorAssignment_1_1_2() { return cColorAssignment_1_1_2; }

		//STRING
		public RuleCall getColorSTRINGTerminalRuleCall_1_1_2_0() { return cColorSTRINGTerminalRuleCall_1_1_2_0; }

		//("literal" "=" literal=STRING)?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//"literal"
		public Keyword getLiteralKeyword_1_2_0() { return cLiteralKeyword_1_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_1_2_1() { return cEqualsSignKeyword_1_2_1; }

		//literal=STRING
		public Assignment getLiteralAssignment_1_2_2() { return cLiteralAssignment_1_2_2; }

		//STRING
		public RuleCall getLiteralSTRINGTerminalRuleCall_1_2_2_0() { return cLiteralSTRINGTerminalRuleCall_1_2_2_0; }
	}

	public class ParameterDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////Datatype:
		////	
		////;
		//ParameterDef:
		//	AttributeDef | ReferenceDef;
		@Override
		public ParserRule getRule() { return rule; }

		//AttributeDef | ReferenceDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//AttributeDef
		public RuleCall getAttributeDefParserRuleCall_0() { return cAttributeDefParserRuleCall_0; }

		//ReferenceDef
		public RuleCall getReferenceDefParserRuleCall_1() { return cReferenceDefParserRuleCall_1; }
	}

	public class AttributeDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeSTRINGTerminalRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cDefaultValueLiteralKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cDefaultValueLiteralAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cDefaultValueLiteralSTRINGTerminalRuleCall_4_0_2_0 = (RuleCall)cDefaultValueLiteralAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cDescriptionKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cDescriptionAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_1_2_0 = (RuleCall)cDescriptionAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cShortDescriptionKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cShortDescriptionAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cShortDescriptionSTRINGTerminalRuleCall_4_2_2_0 = (RuleCall)cShortDescriptionAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cUnitsKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cUnitsAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cUnitsSTRINGTerminalRuleCall_4_3_2_0 = (RuleCall)cUnitsAssignment_4_3_2.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cUnorderedGroup_4.eContents().get(4);
		private final Keyword cDisplayNameKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_4_1 = (Keyword)cGroup_4_4.eContents().get(1);
		private final Assignment cDisplayNameAssignment_4_4_2 = (Assignment)cGroup_4_4.eContents().get(2);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_4_4_2_0 = (RuleCall)cDisplayNameAssignment_4_4_2.eContents().get(0);
		private final Group cGroup_4_5 = (Group)cUnorderedGroup_4.eContents().get(5);
		private final Keyword cCategoryKeyword_4_5_0 = (Keyword)cGroup_4_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_5_1 = (Keyword)cGroup_4_5.eContents().get(1);
		private final Assignment cCategoryAssignment_4_5_2 = (Assignment)cGroup_4_5.eContents().get(2);
		private final RuleCall cCategorySTRINGTerminalRuleCall_4_5_2_0 = (RuleCall)cCategoryAssignment_4_5_2.eContents().get(0);
		private final Group cGroup_4_6 = (Group)cUnorderedGroup_4.eContents().get(6);
		private final Keyword cParameterNameKeyword_4_6_0 = (Keyword)cGroup_4_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_6_1 = (Keyword)cGroup_4_6.eContents().get(1);
		private final Assignment cParameterNameAssignment_4_6_2 = (Assignment)cGroup_4_6.eContents().get(2);
		private final RuleCall cParameterNameSTRINGTerminalRuleCall_4_6_2_0 = (RuleCall)cParameterNameAssignment_4_6_2.eContents().get(0);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AttributeDef:
		//	"attribute" name=ID type=STRING "{" (("defaultValueLiteral" "=" defaultValueLiteral=STRING)? & ("description" "="
		//	description=STRING)? & ("shortDescription" "=" shortDescription=STRING)? & ("units" "=" units=STRING)? &
		//	("displayName" "=" displayName=STRING)? & ("category" "=" category=STRING)? & ("parameterName" "="
		//	parameterName=STRING)?) annotations+=Annotation* "}";
		@Override
		public ParserRule getRule() { return rule; }

		//"attribute" name=ID type=STRING "{" (("defaultValueLiteral" "=" defaultValueLiteral=STRING)? & ("description" "="
		//description=STRING)? & ("shortDescription" "=" shortDescription=STRING)? & ("units" "=" units=STRING)? & ("displayName"
		//"=" displayName=STRING)? & ("category" "=" category=STRING)? & ("parameterName" "=" parameterName=STRING)?)
		//annotations+=Annotation* "}"
		public Group getGroup() { return cGroup; }

		//"attribute"
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//type=STRING
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_2_0() { return cTypeSTRINGTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("defaultValueLiteral" "=" defaultValueLiteral=STRING)? & ("description" "=" description=STRING)? & ("shortDescription"
		//"=" shortDescription=STRING)? & ("units" "=" units=STRING)? & ("displayName" "=" displayName=STRING)? & ("category" "="
		//category=STRING)? & ("parameterName" "=" parameterName=STRING)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//("defaultValueLiteral" "=" defaultValueLiteral=STRING)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"defaultValueLiteral"
		public Keyword getDefaultValueLiteralKeyword_4_0_0() { return cDefaultValueLiteralKeyword_4_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }

		//defaultValueLiteral=STRING
		public Assignment getDefaultValueLiteralAssignment_4_0_2() { return cDefaultValueLiteralAssignment_4_0_2; }

		//STRING
		public RuleCall getDefaultValueLiteralSTRINGTerminalRuleCall_4_0_2_0() { return cDefaultValueLiteralSTRINGTerminalRuleCall_4_0_2_0; }

		//("description" "=" description=STRING)?
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"description"
		public Keyword getDescriptionKeyword_4_1_0() { return cDescriptionKeyword_4_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_4_1_2() { return cDescriptionAssignment_4_1_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_1_2_0() { return cDescriptionSTRINGTerminalRuleCall_4_1_2_0; }

		//("shortDescription" "=" shortDescription=STRING)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"shortDescription"
		public Keyword getShortDescriptionKeyword_4_2_0() { return cShortDescriptionKeyword_4_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }

		//shortDescription=STRING
		public Assignment getShortDescriptionAssignment_4_2_2() { return cShortDescriptionAssignment_4_2_2; }

		//STRING
		public RuleCall getShortDescriptionSTRINGTerminalRuleCall_4_2_2_0() { return cShortDescriptionSTRINGTerminalRuleCall_4_2_2_0; }

		//("units" "=" units=STRING)?
		public Group getGroup_4_3() { return cGroup_4_3; }

		//"units"
		public Keyword getUnitsKeyword_4_3_0() { return cUnitsKeyword_4_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }

		//units=STRING
		public Assignment getUnitsAssignment_4_3_2() { return cUnitsAssignment_4_3_2; }

		//STRING
		public RuleCall getUnitsSTRINGTerminalRuleCall_4_3_2_0() { return cUnitsSTRINGTerminalRuleCall_4_3_2_0; }

		//("displayName" "=" displayName=STRING)?
		public Group getGroup_4_4() { return cGroup_4_4; }

		//"displayName"
		public Keyword getDisplayNameKeyword_4_4_0() { return cDisplayNameKeyword_4_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_4_1() { return cEqualsSignKeyword_4_4_1; }

		//displayName=STRING
		public Assignment getDisplayNameAssignment_4_4_2() { return cDisplayNameAssignment_4_4_2; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_4_4_2_0() { return cDisplayNameSTRINGTerminalRuleCall_4_4_2_0; }

		//("category" "=" category=STRING)?
		public Group getGroup_4_5() { return cGroup_4_5; }

		//"category"
		public Keyword getCategoryKeyword_4_5_0() { return cCategoryKeyword_4_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_5_1() { return cEqualsSignKeyword_4_5_1; }

		//category=STRING
		public Assignment getCategoryAssignment_4_5_2() { return cCategoryAssignment_4_5_2; }

		//STRING
		public RuleCall getCategorySTRINGTerminalRuleCall_4_5_2_0() { return cCategorySTRINGTerminalRuleCall_4_5_2_0; }

		//("parameterName" "=" parameterName=STRING)?
		public Group getGroup_4_6() { return cGroup_4_6; }

		//"parameterName"
		public Keyword getParameterNameKeyword_4_6_0() { return cParameterNameKeyword_4_6_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_6_1() { return cEqualsSignKeyword_4_6_1; }

		//parameterName=STRING
		public Assignment getParameterNameAssignment_4_6_2() { return cParameterNameAssignment_4_6_2; }

		//STRING
		public RuleCall getParameterNameSTRINGTerminalRuleCall_4_6_2_0() { return cParameterNameSTRINGTerminalRuleCall_4_6_2_0; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_5_0() { return cAnnotationsAnnotationParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ReferenceDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeSTRINGTerminalRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cDescriptionKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_0_2_0 = (RuleCall)cDescriptionAssignment_4_0_2.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cDisplayNameKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cDisplayNameAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_4_1_2_0 = (RuleCall)cDisplayNameAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cCategoryKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cCategoryAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cCategorySTRINGTerminalRuleCall_4_2_2_0 = (RuleCall)cCategoryAssignment_4_2_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final Keyword cContainmentKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cContainmentAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cContainmentBooleanParserRuleCall_4_3_2_0 = (RuleCall)cContainmentAssignment_4_3_2.eContents().get(0);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		private final Assignment cRequirementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRequirementsRequirementParserRuleCall_6_0 = (RuleCall)cRequirementsAssignment_6.eContents().get(0);
		private final Assignment cEffectsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEffectsEffectParserRuleCall_7_0 = (RuleCall)cEffectsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ReferenceDef:
		//	"reference" name=ID type=STRING "{" (("description" "=" description=STRING)? & ("displayName" "=" displayName=STRING)?
		//	& ("category" "=" category=STRING)? & ("containment" "=" containment=Boolean)?) annotations+=Annotation*
		//	requirements+=Requirement* effects+=Effect* "}";
		@Override
		public ParserRule getRule() { return rule; }

		//"reference" name=ID type=STRING "{" (("description" "=" description=STRING)? & ("displayName" "=" displayName=STRING)? &
		//("category" "=" category=STRING)? & ("containment" "=" containment=Boolean)?) annotations+=Annotation*
		//requirements+=Requirement* effects+=Effect* "}"
		public Group getGroup() { return cGroup; }

		//"reference"
		public Keyword getReferenceKeyword_0() { return cReferenceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//type=STRING
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_2_0() { return cTypeSTRINGTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("description" "=" description=STRING)? & ("displayName" "=" displayName=STRING)? & ("category" "=" category=STRING)? &
		//("containment" "=" containment=Boolean)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//("description" "=" description=STRING)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"description"
		public Keyword getDescriptionKeyword_4_0_0() { return cDescriptionKeyword_4_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_0_1() { return cEqualsSignKeyword_4_0_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_4_0_2() { return cDescriptionAssignment_4_0_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_4_0_2_0; }

		//("displayName" "=" displayName=STRING)?
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"displayName"
		public Keyword getDisplayNameKeyword_4_1_0() { return cDisplayNameKeyword_4_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_1_1() { return cEqualsSignKeyword_4_1_1; }

		//displayName=STRING
		public Assignment getDisplayNameAssignment_4_1_2() { return cDisplayNameAssignment_4_1_2; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_4_1_2_0() { return cDisplayNameSTRINGTerminalRuleCall_4_1_2_0; }

		//("category" "=" category=STRING)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"category"
		public Keyword getCategoryKeyword_4_2_0() { return cCategoryKeyword_4_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }

		//category=STRING
		public Assignment getCategoryAssignment_4_2_2() { return cCategoryAssignment_4_2_2; }

		//STRING
		public RuleCall getCategorySTRINGTerminalRuleCall_4_2_2_0() { return cCategorySTRINGTerminalRuleCall_4_2_2_0; }

		//("containment" "=" containment=Boolean)?
		public Group getGroup_4_3() { return cGroup_4_3; }

		//"containment"
		public Keyword getContainmentKeyword_4_3_0() { return cContainmentKeyword_4_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_3_1() { return cEqualsSignKeyword_4_3_1; }

		//containment=Boolean
		public Assignment getContainmentAssignment_4_3_2() { return cContainmentAssignment_4_3_2; }

		//Boolean
		public RuleCall getContainmentBooleanParserRuleCall_4_3_2_0() { return cContainmentBooleanParserRuleCall_4_3_2_0; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_5_0() { return cAnnotationsAnnotationParserRuleCall_5_0; }

		//requirements+=Requirement*
		public Assignment getRequirementsAssignment_6() { return cRequirementsAssignment_6; }

		//Requirement
		public RuleCall getRequirementsRequirementParserRuleCall_6_0() { return cRequirementsRequirementParserRuleCall_6_0; }

		//effects+=Effect*
		public Assignment getEffectsAssignment_7() { return cEffectsAssignment_7; }

		//Effect
		public RuleCall getEffectsEffectParserRuleCall_7_0() { return cEffectsEffectParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Boolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Boolean:
		//	"true" | "false";
		@Override
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class ActivityDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActivityDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cDescriptionKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_0_2_0 = (RuleCall)cDescriptionAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cCategoryKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cCategoryAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cCategorySTRINGTerminalRuleCall_3_1_2_0 = (RuleCall)cCategoryAssignment_3_1_2.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cDurationKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cDurationAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cDurationSTRINGTerminalRuleCall_3_2_2_0 = (RuleCall)cDurationAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cDisplayNameKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Assignment cDisplayNameAssignment_3_3_2 = (Assignment)cGroup_3_3.eContents().get(2);
		private final RuleCall cDisplayNameSTRINGTerminalRuleCall_3_3_2_0 = (RuleCall)cDisplayNameAssignment_3_3_2.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cHiddenKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Assignment cHiddenParamsAssignment_3_4_2 = (Assignment)cGroup_3_4.eContents().get(2);
		private final RuleCall cHiddenParamsSTRINGTerminalRuleCall_3_4_2_0 = (RuleCall)cHiddenParamsAssignment_3_4_2.eContents().get(0);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Assignment cParametersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cParametersParameterDefParserRuleCall_5_0 = (RuleCall)cParametersAssignment_5.eContents().get(0);
		private final Assignment cRequirementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRequirementsRequirementParserRuleCall_6_0 = (RuleCall)cRequirementsAssignment_6.eContents().get(0);
		private final Assignment cEffectsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEffectsEffectParserRuleCall_7_0 = (RuleCall)cEffectsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ActivityDef:
		//	"ActivityDef" name=ID "{" (("description" "=" description=STRING)? & ("category" "=" category=STRING)? & ("duration"
		//	"=" duration=STRING)? & ("displayName" "=" displayName=STRING)? & ("hidden" "=" hiddenParams=STRING)?)
		//	annotations+=Annotation* parameters+=ParameterDef* requirements+=Requirement* effects+=Effect* "}";
		@Override
		public ParserRule getRule() { return rule; }

		//"ActivityDef" name=ID "{" (("description" "=" description=STRING)? & ("category" "=" category=STRING)? & ("duration" "="
		//duration=STRING)? & ("displayName" "=" displayName=STRING)? & ("hidden" "=" hiddenParams=STRING)?)
		//annotations+=Annotation* parameters+=ParameterDef* requirements+=Requirement* effects+=Effect* "}"
		public Group getGroup() { return cGroup; }

		//"ActivityDef"
		public Keyword getActivityDefKeyword_0() { return cActivityDefKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("description" "=" description=STRING)? & ("category" "=" category=STRING)? & ("duration" "=" duration=STRING)? &
		//("displayName" "=" displayName=STRING)? & ("hidden" "=" hiddenParams=STRING)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//("description" "=" description=STRING)?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"description"
		public Keyword getDescriptionKeyword_3_0_0() { return cDescriptionKeyword_3_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_0_1() { return cEqualsSignKeyword_3_0_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_0_2() { return cDescriptionAssignment_3_0_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_3_0_2_0; }

		//("category" "=" category=STRING)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"category"
		public Keyword getCategoryKeyword_3_1_0() { return cCategoryKeyword_3_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1_1() { return cEqualsSignKeyword_3_1_1; }

		//category=STRING
		public Assignment getCategoryAssignment_3_1_2() { return cCategoryAssignment_3_1_2; }

		//STRING
		public RuleCall getCategorySTRINGTerminalRuleCall_3_1_2_0() { return cCategorySTRINGTerminalRuleCall_3_1_2_0; }

		//("duration" "=" duration=STRING)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"duration"
		public Keyword getDurationKeyword_3_2_0() { return cDurationKeyword_3_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_2_1() { return cEqualsSignKeyword_3_2_1; }

		//duration=STRING
		public Assignment getDurationAssignment_3_2_2() { return cDurationAssignment_3_2_2; }

		//STRING
		public RuleCall getDurationSTRINGTerminalRuleCall_3_2_2_0() { return cDurationSTRINGTerminalRuleCall_3_2_2_0; }

		//("displayName" "=" displayName=STRING)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//"displayName"
		public Keyword getDisplayNameKeyword_3_3_0() { return cDisplayNameKeyword_3_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_3_1() { return cEqualsSignKeyword_3_3_1; }

		//displayName=STRING
		public Assignment getDisplayNameAssignment_3_3_2() { return cDisplayNameAssignment_3_3_2; }

		//STRING
		public RuleCall getDisplayNameSTRINGTerminalRuleCall_3_3_2_0() { return cDisplayNameSTRINGTerminalRuleCall_3_3_2_0; }

		//("hidden" "=" hiddenParams=STRING)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//"hidden"
		public Keyword getHiddenKeyword_3_4_0() { return cHiddenKeyword_3_4_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_4_1() { return cEqualsSignKeyword_3_4_1; }

		//hiddenParams=STRING
		public Assignment getHiddenParamsAssignment_3_4_2() { return cHiddenParamsAssignment_3_4_2; }

		//STRING
		public RuleCall getHiddenParamsSTRINGTerminalRuleCall_3_4_2_0() { return cHiddenParamsSTRINGTerminalRuleCall_3_4_2_0; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//parameters+=ParameterDef*
		public Assignment getParametersAssignment_5() { return cParametersAssignment_5; }

		//ParameterDef
		public RuleCall getParametersParameterDefParserRuleCall_5_0() { return cParametersParameterDefParserRuleCall_5_0; }

		//requirements+=Requirement*
		public Assignment getRequirementsAssignment_6() { return cRequirementsAssignment_6; }

		//Requirement
		public RuleCall getRequirementsRequirementParserRuleCall_6_0() { return cRequirementsRequirementParserRuleCall_6_0; }

		//effects+=Effect*
		public Assignment getEffectsAssignment_7() { return cEffectsAssignment_7; }

		//Effect
		public RuleCall getEffectsEffectParserRuleCall_7_0() { return cEffectsEffectParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnnotationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSourceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSourceSTRINGTerminalRuleCall_1_0 = (RuleCall)cSourceAssignment_1.eContents().get(0);
		private final Assignment cKeyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKeySTRINGTerminalRuleCall_2_0 = (RuleCall)cKeyAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//Annotation:
		//	"annotation" source=STRING key=STRING value=STRING;
		@Override
		public ParserRule getRule() { return rule; }

		//"annotation" source=STRING key=STRING value=STRING
		public Group getGroup() { return cGroup; }

		//"annotation"
		public Keyword getAnnotationKeyword_0() { return cAnnotationKeyword_0; }

		//source=STRING
		public Assignment getSourceAssignment_1() { return cSourceAssignment_1; }

		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_1_0() { return cSourceSTRINGTerminalRuleCall_1_0; }

		//key=STRING
		public Assignment getKeyAssignment_2() { return cKeyAssignment_2; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_2_0() { return cKeySTRINGTerminalRuleCall_2_0; }

		//value=STRING
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0() { return cValueSTRINGTerminalRuleCall_3_0; }
	}

	public class RequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Requirement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNumericRequirementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStateRequirementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Requirement:
		//	NumericRequirement | StateRequirement;
		@Override
		public ParserRule getRule() { return rule; }

		//NumericRequirement | StateRequirement
		public Alternatives getAlternatives() { return cAlternatives; }

		//NumericRequirement
		public RuleCall getNumericRequirementParserRuleCall_0() { return cNumericRequirementParserRuleCall_0; }

		//StateRequirement
		public RuleCall getStateRequirementParserRuleCall_1() { return cStateRequirementParserRuleCall_1; }
	}

	public class NumericRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumericRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumericRequirementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cExpressionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionSTRINGTerminalRuleCall_3_0 = (RuleCall)cExpressionAssignment_3.eContents().get(0);
		
		//NumericRequirement:
		//	"numericRequirement" "expression" "=" expression=STRING;
		@Override
		public ParserRule getRule() { return rule; }

		//"numericRequirement" "expression" "=" expression=STRING
		public Group getGroup() { return cGroup; }

		//"numericRequirement"
		public Keyword getNumericRequirementKeyword_0() { return cNumericRequirementKeyword_0; }

		//"expression"
		public Keyword getExpressionKeyword_1() { return cExpressionKeyword_1; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//expression=STRING
		public Assignment getExpressionAssignment_3() { return cExpressionAssignment_3; }

		//STRING
		public RuleCall getExpressionSTRINGTerminalRuleCall_3_0() { return cExpressionSTRINGTerminalRuleCall_3_0; }
	}

	public class StateRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateRequirementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDefinitionKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cDefinitionAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cDefinitionSTRINGTerminalRuleCall_1_0_2_0 = (RuleCall)cDefinitionAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cRequiredStateKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cRequiredStateAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cRequiredStateSTRINGTerminalRuleCall_1_1_2_0 = (RuleCall)cRequiredStateAssignment_1_1_2.eContents().get(0);
		
		//StateRequirement:
		//	"stateRequirement" ("definition" "=" definition=STRING & "requiredState" "=" requiredState=STRING);
		@Override
		public ParserRule getRule() { return rule; }

		//"stateRequirement" ("definition" "=" definition=STRING & "requiredState" "=" requiredState=STRING)
		public Group getGroup() { return cGroup; }

		//"stateRequirement"
		public Keyword getStateRequirementKeyword_0() { return cStateRequirementKeyword_0; }

		//"definition" "=" definition=STRING & "requiredState" "=" requiredState=STRING
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//"definition" "=" definition=STRING
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"definition"
		public Keyword getDefinitionKeyword_1_0_0() { return cDefinitionKeyword_1_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1_0_1() { return cEqualsSignKeyword_1_0_1; }

		//definition=STRING
		public Assignment getDefinitionAssignment_1_0_2() { return cDefinitionAssignment_1_0_2; }

		//STRING
		public RuleCall getDefinitionSTRINGTerminalRuleCall_1_0_2_0() { return cDefinitionSTRINGTerminalRuleCall_1_0_2_0; }

		//"requiredState" "=" requiredState=STRING
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"requiredState"
		public Keyword getRequiredStateKeyword_1_1_0() { return cRequiredStateKeyword_1_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_1_1_1() { return cEqualsSignKeyword_1_1_1; }

		//requiredState=STRING
		public Assignment getRequiredStateAssignment_1_1_2() { return cRequiredStateAssignment_1_1_2; }

		//STRING
		public RuleCall getRequiredStateSTRINGTerminalRuleCall_1_1_2_0() { return cRequiredStateSTRINGTerminalRuleCall_1_1_2_0; }
	}

	public class EffectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Effect");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNumericEffectParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStateEffectParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cClaimableEffectParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSharedEffectParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Effect:
		//	NumericEffect | StateEffect | ClaimableEffect | SharedEffect;
		@Override
		public ParserRule getRule() { return rule; }

		//NumericEffect | StateEffect | ClaimableEffect | SharedEffect
		public Alternatives getAlternatives() { return cAlternatives; }

		//NumericEffect
		public RuleCall getNumericEffectParserRuleCall_0() { return cNumericEffectParserRuleCall_0; }

		//StateEffect
		public RuleCall getStateEffectParserRuleCall_1() { return cStateEffectParserRuleCall_1; }

		//ClaimableEffect
		public RuleCall getClaimableEffectParserRuleCall_2() { return cClaimableEffectParserRuleCall_2; }

		//SharedEffect
		public RuleCall getSharedEffectParserRuleCall_3() { return cSharedEffectParserRuleCall_3; }
	}

	public class NumericEffectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumericEffect");
		private final Keyword cNumericEffectKeyword = (Keyword)rule.eContents().get(1);
		
		//NumericEffect:
		//	"numericEffect";
		@Override
		public ParserRule getRule() { return rule; }

		//"numericEffect"
		public Keyword getNumericEffectKeyword() { return cNumericEffectKeyword; }
	}

	public class StateEffectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateEffect");
		private final Keyword cStateEffectKeyword = (Keyword)rule.eContents().get(1);
		
		//StateEffect:
		//	"stateEffect";
		@Override
		public ParserRule getRule() { return rule; }

		//"stateEffect"
		public Keyword getStateEffectKeyword() { return cStateEffectKeyword; }
	}

	public class ClaimableEffectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClaimableEffect");
		private final Keyword cClaimableEffectKeyword = (Keyword)rule.eContents().get(1);
		
		//ClaimableEffect:
		//	"claimableEffect";
		@Override
		public ParserRule getRule() { return rule; }

		//"claimableEffect"
		public Keyword getClaimableEffectKeyword() { return cClaimableEffectKeyword; }
	}

	public class SharedEffectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SharedEffect");
		private final Keyword cSharedEffectKeyword = (Keyword)rule.eContents().get(1);
		
		//SharedEffect:
		//	"sharedEffect";
		@Override
		public ParserRule getRule() { return rule; }

		//"sharedEffect"
		public Keyword getSharedEffectKeyword() { return cSharedEffectKeyword; }
	}

	public class ActivityGroupDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityGroupDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActivityGroupDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAnnotationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_3_0 = (RuleCall)cAnnotationsAssignment_3.eContents().get(0);
		private final Assignment cParametersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cParametersParameterDefParserRuleCall_4_0 = (RuleCall)cParametersAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ActivityGroupDef:
		//	"ActivityGroupDef" name=ID "{" annotations+=Annotation* parameters+=ParameterDef* "}";
		@Override
		public ParserRule getRule() { return rule; }

		//"ActivityGroupDef" name=ID "{" annotations+=Annotation* parameters+=ParameterDef* "}"
		public Group getGroup() { return cGroup; }

		//"ActivityGroupDef"
		public Keyword getActivityGroupDefKeyword_0() { return cActivityGroupDefKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_3() { return cAnnotationsAssignment_3; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_3_0() { return cAnnotationsAnnotationParserRuleCall_3_0; }

		//parameters+=ParameterDef*
		public Assignment getParametersAssignment_4() { return cParametersAssignment_4; }

		//ParameterDef
		public RuleCall getParametersParameterDefParserRuleCall_4_0() { return cParametersParameterDefParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ObjectDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjectDefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ObjectDef:
		//	"ObjectDef" name=ID;
		@Override
		public ParserRule getRule() { return rule; }

		//"ObjectDef" name=ID
		public Group getGroup() { return cGroup; }

		//"ObjectDef"
		public Keyword getObjectDefKeyword_0() { return cObjectDefKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ResourceDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNumericResourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStateResourceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cClaimableResourceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSharableResourceParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSummaryResourceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ResourceDef:
		//	NumericResource | StateResource | ClaimableResource | SharableResource | SummaryResource;
		@Override
		public ParserRule getRule() { return rule; }

		//NumericResource | StateResource | ClaimableResource | SharableResource | SummaryResource
		public Alternatives getAlternatives() { return cAlternatives; }

		//NumericResource
		public RuleCall getNumericResourceParserRuleCall_0() { return cNumericResourceParserRuleCall_0; }

		//StateResource
		public RuleCall getStateResourceParserRuleCall_1() { return cStateResourceParserRuleCall_1; }

		//ClaimableResource
		public RuleCall getClaimableResourceParserRuleCall_2() { return cClaimableResourceParserRuleCall_2; }

		//SharableResource
		public RuleCall getSharableResourceParserRuleCall_3() { return cSharableResourceParserRuleCall_3; }

		//SummaryResource
		public RuleCall getSummaryResourceParserRuleCall_4() { return cSummaryResourceParserRuleCall_4; }
	}

	public class NumericResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumericResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumericResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//NumericResource:
		//	"NumericResource" name=ID;
		@Override
		public ParserRule getRule() { return rule; }

		//"NumericResource" name=ID
		public Group getGroup() { return cGroup; }

		//"NumericResource"
		public Keyword getNumericResourceKeyword_0() { return cNumericResourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class StateResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StateResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//StateResource:
		//	"StateResource" name=ID;
		@Override
		public ParserRule getRule() { return rule; }

		//"StateResource" name=ID
		public Group getGroup() { return cGroup; }

		//"StateResource"
		public Keyword getStateResourceKeyword_0() { return cStateResourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ClaimableResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClaimableResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClaimableResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ClaimableResource:
		//	"ClaimableResource" name=ID;
		@Override
		public ParserRule getRule() { return rule; }

		//"ClaimableResource" name=ID
		public Group getGroup() { return cGroup; }

		//"ClaimableResource"
		public Keyword getClaimableResourceKeyword_0() { return cClaimableResourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class SharableResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SharableResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSharableResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//SharableResource:
		//	"SharableResource" name=ID;
		@Override
		public ParserRule getRule() { return rule; }

		//"SharableResource" name=ID
		public Group getGroup() { return cGroup; }

		//"SharableResource"
		public Keyword getSharableResourceKeyword_0() { return cSharableResourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class SummaryResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SummaryResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSummaryresourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//SummaryResource:
		//	"Summaryresource" name=ID;
		@Override
		public ParserRule getRule() { return rule; }

		//"Summaryresource" name=ID
		public Group getGroup() { return cGroup; }

		//"Summaryresource"
		public Keyword getSummaryresourceKeyword_0() { return cSummaryresourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	
	
	private DictionaryElements pDictionary;
	private DefinitionElements pDefinition;
	private EnumDefElements pEnumDef;
	private EnumValueElements pEnumValue;
	private ParameterDefElements pParameterDef;
	private AttributeDefElements pAttributeDef;
	private ReferenceDefElements pReferenceDef;
	private BooleanElements pBoolean;
	private ActivityDefElements pActivityDef;
	private AnnotationElements pAnnotation;
	private RequirementElements pRequirement;
	private NumericRequirementElements pNumericRequirement;
	private StateRequirementElements pStateRequirement;
	private EffectElements pEffect;
	private NumericEffectElements pNumericEffect;
	private StateEffectElements pStateEffect;
	private ClaimableEffectElements pClaimableEffect;
	private SharedEffectElements pSharedEffect;
	private ActivityGroupDefElements pActivityGroupDef;
	private ObjectDefElements pObjectDef;
	private ResourceDefElements pResourceDef;
	private NumericResourceElements pNumericResource;
	private StateResourceElements pStateResource;
	private ClaimableResourceElements pClaimableResource;
	private SharableResourceElements pSharableResource;
	private SummaryResourceElements pSummaryResource;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public XDictionaryGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("gov.nasa.ensemble.dictionary.xtext.XDictionary".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Dictionary:
	//	("name" "=" name=ID & ("author" "=" author=STRING)? & ("date" "=" date=STRING)? & ("description" "="
	//	description=STRING)? & ("version" "=" version=STRING)? & "domain" "=" domain=STRING) definitions+=Definition*;
	public DictionaryElements getDictionaryAccess() {
		return (pDictionary != null) ? pDictionary : (pDictionary = new DictionaryElements());
	}
	
	public ParserRule getDictionaryRule() {
		return getDictionaryAccess().getRule();
	}

	//Definition:
	//	EnumDef //	 | Datatype 
	//	| ParameterDef | ActivityDef | ActivityGroupDef | ObjectDef | ResourceDef;
	public DefinitionElements getDefinitionAccess() {
		return (pDefinition != null) ? pDefinition : (pDefinition = new DefinitionElements());
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}

	//EnumDef:
	//	"Enum" name=ID "{" values+=EnumValue* "}";
	public EnumDefElements getEnumDefAccess() {
		return (pEnumDef != null) ? pEnumDef : (pEnumDef = new EnumDefElements());
	}
	
	public ParserRule getEnumDefRule() {
		return getEnumDefAccess().getRule();
	}

	//EnumValue:
	//	"Literal" ("name" "=" name=STRING & ("color" "=" color=STRING)? & ("literal" "=" literal=STRING)?);
	public EnumValueElements getEnumValueAccess() {
		return (pEnumValue != null) ? pEnumValue : (pEnumValue = new EnumValueElements());
	}
	
	public ParserRule getEnumValueRule() {
		return getEnumValueAccess().getRule();
	}

	////Datatype:
	////	
	////;
	//ParameterDef:
	//	AttributeDef | ReferenceDef;
	public ParameterDefElements getParameterDefAccess() {
		return (pParameterDef != null) ? pParameterDef : (pParameterDef = new ParameterDefElements());
	}
	
	public ParserRule getParameterDefRule() {
		return getParameterDefAccess().getRule();
	}

	//AttributeDef:
	//	"attribute" name=ID type=STRING "{" (("defaultValueLiteral" "=" defaultValueLiteral=STRING)? & ("description" "="
	//	description=STRING)? & ("shortDescription" "=" shortDescription=STRING)? & ("units" "=" units=STRING)? &
	//	("displayName" "=" displayName=STRING)? & ("category" "=" category=STRING)? & ("parameterName" "="
	//	parameterName=STRING)?) annotations+=Annotation* "}";
	public AttributeDefElements getAttributeDefAccess() {
		return (pAttributeDef != null) ? pAttributeDef : (pAttributeDef = new AttributeDefElements());
	}
	
	public ParserRule getAttributeDefRule() {
		return getAttributeDefAccess().getRule();
	}

	//ReferenceDef:
	//	"reference" name=ID type=STRING "{" (("description" "=" description=STRING)? & ("displayName" "=" displayName=STRING)?
	//	& ("category" "=" category=STRING)? & ("containment" "=" containment=Boolean)?) annotations+=Annotation*
	//	requirements+=Requirement* effects+=Effect* "}";
	public ReferenceDefElements getReferenceDefAccess() {
		return (pReferenceDef != null) ? pReferenceDef : (pReferenceDef = new ReferenceDefElements());
	}
	
	public ParserRule getReferenceDefRule() {
		return getReferenceDefAccess().getRule();
	}

	//Boolean:
	//	"true" | "false";
	public BooleanElements getBooleanAccess() {
		return (pBoolean != null) ? pBoolean : (pBoolean = new BooleanElements());
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}

	//ActivityDef:
	//	"ActivityDef" name=ID "{" (("description" "=" description=STRING)? & ("category" "=" category=STRING)? & ("duration"
	//	"=" duration=STRING)? & ("displayName" "=" displayName=STRING)? & ("hidden" "=" hiddenParams=STRING)?)
	//	annotations+=Annotation* parameters+=ParameterDef* requirements+=Requirement* effects+=Effect* "}";
	public ActivityDefElements getActivityDefAccess() {
		return (pActivityDef != null) ? pActivityDef : (pActivityDef = new ActivityDefElements());
	}
	
	public ParserRule getActivityDefRule() {
		return getActivityDefAccess().getRule();
	}

	//Annotation:
	//	"annotation" source=STRING key=STRING value=STRING;
	public AnnotationElements getAnnotationAccess() {
		return (pAnnotation != null) ? pAnnotation : (pAnnotation = new AnnotationElements());
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//Requirement:
	//	NumericRequirement | StateRequirement;
	public RequirementElements getRequirementAccess() {
		return (pRequirement != null) ? pRequirement : (pRequirement = new RequirementElements());
	}
	
	public ParserRule getRequirementRule() {
		return getRequirementAccess().getRule();
	}

	//NumericRequirement:
	//	"numericRequirement" "expression" "=" expression=STRING;
	public NumericRequirementElements getNumericRequirementAccess() {
		return (pNumericRequirement != null) ? pNumericRequirement : (pNumericRequirement = new NumericRequirementElements());
	}
	
	public ParserRule getNumericRequirementRule() {
		return getNumericRequirementAccess().getRule();
	}

	//StateRequirement:
	//	"stateRequirement" ("definition" "=" definition=STRING & "requiredState" "=" requiredState=STRING);
	public StateRequirementElements getStateRequirementAccess() {
		return (pStateRequirement != null) ? pStateRequirement : (pStateRequirement = new StateRequirementElements());
	}
	
	public ParserRule getStateRequirementRule() {
		return getStateRequirementAccess().getRule();
	}

	//Effect:
	//	NumericEffect | StateEffect | ClaimableEffect | SharedEffect;
	public EffectElements getEffectAccess() {
		return (pEffect != null) ? pEffect : (pEffect = new EffectElements());
	}
	
	public ParserRule getEffectRule() {
		return getEffectAccess().getRule();
	}

	//NumericEffect:
	//	"numericEffect";
	public NumericEffectElements getNumericEffectAccess() {
		return (pNumericEffect != null) ? pNumericEffect : (pNumericEffect = new NumericEffectElements());
	}
	
	public ParserRule getNumericEffectRule() {
		return getNumericEffectAccess().getRule();
	}

	//StateEffect:
	//	"stateEffect";
	public StateEffectElements getStateEffectAccess() {
		return (pStateEffect != null) ? pStateEffect : (pStateEffect = new StateEffectElements());
	}
	
	public ParserRule getStateEffectRule() {
		return getStateEffectAccess().getRule();
	}

	//ClaimableEffect:
	//	"claimableEffect";
	public ClaimableEffectElements getClaimableEffectAccess() {
		return (pClaimableEffect != null) ? pClaimableEffect : (pClaimableEffect = new ClaimableEffectElements());
	}
	
	public ParserRule getClaimableEffectRule() {
		return getClaimableEffectAccess().getRule();
	}

	//SharedEffect:
	//	"sharedEffect";
	public SharedEffectElements getSharedEffectAccess() {
		return (pSharedEffect != null) ? pSharedEffect : (pSharedEffect = new SharedEffectElements());
	}
	
	public ParserRule getSharedEffectRule() {
		return getSharedEffectAccess().getRule();
	}

	//ActivityGroupDef:
	//	"ActivityGroupDef" name=ID "{" annotations+=Annotation* parameters+=ParameterDef* "}";
	public ActivityGroupDefElements getActivityGroupDefAccess() {
		return (pActivityGroupDef != null) ? pActivityGroupDef : (pActivityGroupDef = new ActivityGroupDefElements());
	}
	
	public ParserRule getActivityGroupDefRule() {
		return getActivityGroupDefAccess().getRule();
	}

	//ObjectDef:
	//	"ObjectDef" name=ID;
	public ObjectDefElements getObjectDefAccess() {
		return (pObjectDef != null) ? pObjectDef : (pObjectDef = new ObjectDefElements());
	}
	
	public ParserRule getObjectDefRule() {
		return getObjectDefAccess().getRule();
	}

	//ResourceDef:
	//	NumericResource | StateResource | ClaimableResource | SharableResource | SummaryResource;
	public ResourceDefElements getResourceDefAccess() {
		return (pResourceDef != null) ? pResourceDef : (pResourceDef = new ResourceDefElements());
	}
	
	public ParserRule getResourceDefRule() {
		return getResourceDefAccess().getRule();
	}

	//NumericResource:
	//	"NumericResource" name=ID;
	public NumericResourceElements getNumericResourceAccess() {
		return (pNumericResource != null) ? pNumericResource : (pNumericResource = new NumericResourceElements());
	}
	
	public ParserRule getNumericResourceRule() {
		return getNumericResourceAccess().getRule();
	}

	//StateResource:
	//	"StateResource" name=ID;
	public StateResourceElements getStateResourceAccess() {
		return (pStateResource != null) ? pStateResource : (pStateResource = new StateResourceElements());
	}
	
	public ParserRule getStateResourceRule() {
		return getStateResourceAccess().getRule();
	}

	//ClaimableResource:
	//	"ClaimableResource" name=ID;
	public ClaimableResourceElements getClaimableResourceAccess() {
		return (pClaimableResource != null) ? pClaimableResource : (pClaimableResource = new ClaimableResourceElements());
	}
	
	public ParserRule getClaimableResourceRule() {
		return getClaimableResourceAccess().getRule();
	}

	//SharableResource:
	//	"SharableResource" name=ID;
	public SharableResourceElements getSharableResourceAccess() {
		return (pSharableResource != null) ? pSharableResource : (pSharableResource = new SharableResourceElements());
	}
	
	public ParserRule getSharableResourceRule() {
		return getSharableResourceAccess().getRule();
	}

	//SummaryResource:
	//	"Summaryresource" name=ID;
	public SummaryResourceElements getSummaryResourceAccess() {
		return (pSummaryResource != null) ? pSummaryResource : (pSummaryResource = new SummaryResourceElements());
	}
	
	public ParserRule getSummaryResourceRule() {
		return getSummaryResourceAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
